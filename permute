#!/usr/bin/env python3
from itertools import permutations, combinations
import sys
import argparse


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-w', '--wordsonly',
                        action='store_true',
                        default=False)
    parser.add_argument('--min', action='store', default=0, type=int)
    parser.add_argument('--max', action='store', default=None, type=int)
    parser.add_argument('-o', '--order-matters',
                        action='store_true',
                        default=False)
    parser.add_argument('string_to_permute', nargs='?', default=None)
    args = parser.parse_args()

    string_to_permute = args.string_to_permute or sys.stdin.read()

    if args.wordsonly:
        with open('/usr/share/dict/words') as wordlist:
            filter_set = {line.strip().lower() for line in wordlist}
    else:
        filter_set = None

    min_length = args.min
    max_length = args.max or len(string_to_permute)

    alg = permutations if args.order_matters else combinations

    for length in range(min_length, max_length + 1):
        for perm in alg(string_to_permute, length):
            word = ''.join(perm)

            if not filter_set:
                print(word)
            elif word in filter_set:
                print(word)


if __name__ == '__main__':
    main()
