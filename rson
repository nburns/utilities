#!/usr/bin/env ruby
require 'json'
require  'pry'

args = ARGV

if ARGV[0] == '--print'
  output = :print
  args.shift
elsif args.length == 0
  args = ['data']
else
  output = :json
end


# Expression      Result
# {}.a            nil
# {a: 1}.a        1
# {'a' => 1}.a    1
# {}.a!           NoMethodError  force an error if the thing does not implement that method
class Hash
  def method_missing(method, *_args)
    return self[method] if key?(method) # indifferent access

    name = method.to_s

    return self[name] if key?(name)

    return send(name.slice(0, name.length).to_sym) if name.end_with?('!')

    nil
  end
end

d = data = JSON.parse(STDIN.read)

result = binding.eval(args.join(' '))

case output
when :print
  puts result
when :json
  puts JSON.pretty_generate(result)
else
  raise StandardError("dont know how to handle #{output.inspect}")
end
